EXPRESS PROJECT:

mkdir *project_name*
cd *project_name*

npm init -y

npm install body-parser --save
npm install mongoose --save
npm install express --save
npm install path --save

npm install ejs --save
npm install express-session --save
npm install bcrypt-as-promised --save
npm install socket.io --save
mkdir static
mkdir views

touch server.js
nodemon server.js 

// Notes:
// Only npm install the modules you need

********************
********************
********************

ANGULAR PROJECT:

ng new *project_name* --routing
cd *project_name*
ng build --watch

ng serve

********************

ADD A SERVICE:

1. CREATE
ng g s http

2. REGISTER
go to app.module.ts
import
include it in Providers

3. HTTPCLIENT
go to app.module.ts
import
include it in Imports

4. DEPENDENCY INJECTION
import 
make an attribute

********************

ADD A COMPONENT:

ng g c *component_name*

********************
********************
********************

EXPRESS + ANGULAR:

Method #1:
Start an EXPRESS Proje
cd into EXPRESS Project
Start an ANGULAR Project in the root directory of the EXPRESS Project

Method #2:
Start and EXPRESS Project
Start an ANGULAR Project
Drag & Drop the ANGULAR Project into the EXPRESS Project

********************
********************
********************

EXPRESS  + ANGULAR:
BARE BONES SERVER.JS:

var express = require("express");
var path = require("path");
var bodyParser = require("body-parser");
var mongoose = require('mongoose');

var app = express();

mongoose.Promise = global.Promise;

app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

app.use(express.static(path.join(__dirname, "./static")));
app.use(express.static( __dirname + '/angular-app/dist' ));
app.set("views", path.join(__dirname, "./views"));

mongoose.connect('mongodb://localhost/SchemaName');

var Schema = mongoose.Schema;

var NameSchema = new mongoose.Schema({
    name: {
        type: String,
        required: true,
        minlength: [3, "Name must have more than 3 characters!"]
    }
}, {timestamps:true});

mongoose.model('Name', NameSchema);
var Name = mongoose.model('Name');

// START OF ROUTES
// ROUTES GO HERE
// END OF ROUTES

app.all("*", (req,res,next) => {
    res.sendFile(path.resolve("./angular-anon/dist/index.html"))
});

var server = app.listen(6789, function() {
    console.log("Listening on port 6789!");
});